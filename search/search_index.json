{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"fastEDM Python Package","text":""},{"location":"#package-description","title":"Package Description","text":"<p>Empirical Dynamic Modeling (EDM) is a way to perform causal analysis on time series data.  The <code>fastEDM</code> Python package implements a series of EDM tools, including the convergent cross-mapping algorithm. </p> <p>Key features of the package:</p> <ul> <li>powered by a fast multi-threaded C++ backend,</li> <li>able to process panel data, a.k.a. multispatial EDM,</li> <li>able to handle missing data using new <code>dt</code> algorithms or by dropping points.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>To install the latest version from Github using <code>pip</code> run:</p> <pre><code>pip install 'fastEDM @ git+https://github.com/EDM-Developers/fastEDM-python'\n</code></pre>"},{"location":"#example-chicago-crime-levels-and-temperature","title":"Example: Chicago crime levels and temperature","text":"<p>This example, looking at the causal links between Chicago\u2019s temperature and crime rates, is described in full in our paper:</p> <pre><code>from fastEDM import easy_edm\nimport pandas as pd\n\nurl = \"https://github.com/EDM-Developers/fastEDM-r/raw/main/vignettes/chicago.csv\"\nchicago = pd.read_csv(url)\nchicago[\"Crime\"] = chicago[\"Crime\"].diff()\n\ncrimeCCMCausesTemp = easy_edm(\"Crime\", \"Temperature\", data=chicago, verbosity=0)\n#&gt; No evidence of CCM causation from Crime to Temperature found.\n\ntempCCMCausesCrime = easy_edm(\"Temperature\", \"Crime\", data=chicago, verbosity=0)\n#&gt; Some evidence of CCM causation from Temperature to Crime found.\n</code></pre>"},{"location":"#stata-r-packages","title":"Stata &amp; R packages","text":"<p>We have created the edm Stata package and are currently developing this package alongside the fastEDM R package. The <code>fastEDM</code> packages are direct ports of the Stata package to R &amp; Python. As all the packages share the same underlying C++ code, their behaviour will be identical.</p>"},{"location":"#other-resources","title":"Other Resources","text":"<p>This site serves as the primary source of documentation for the package, though there is also:</p> <ul> <li>our Stata Journal paper which explains the package and the overall causal framework, and</li> <li>Jinjing's QMNET seminar on the package, the recording is on YouTube and the slides are here.</li> </ul>"},{"location":"#authors","title":"Authors","text":"<ul> <li>Patrick Laub (author, maintainer),</li> <li>Jinjing Li (author),</li> <li>Michael Zyphur (author),</li> <li>Edoardo Tescari (contributor),</li> <li>Simon Mutch (contributor),</li> <li>Rishi Dhushiyandan (contributor),</li> <li>George Sugihara (originator)</li> </ul>"},{"location":"#citation","title":"Citation","text":"<p>Jinjing Li, Michael J. Zyphur, George Sugihara, Patrick J. Laub (2021), Beyond Linearity, Stability, and Equilibrium: The edm Package for Empirical Dynamic Modeling and Convergent Cross Mapping in Stata, Stata Journal, 21(1), pp. 220-258</p> <pre><code>@article{edm-stata,\n  title={Beyond linearity, stability, and equilibrium: The edm package for empirical dynamic modeling and convergent cross-mapping in {S}tata},\n  author={Li, Jinjing and Zyphur, Michael J and Sugihara, George and Laub, Patrick J},\n  journal={The Stata Journal},\n  volume={21},\n  number={1},\n  pages={220--258},\n  year={2021},\n}\n</code></pre>"},{"location":"manifolds/","title":"Manifolds","text":"<p>This demo runs the Python/C++ code after it has been compiled to Web Assembly and run interactively using PyScript.  In the future, we can use this method to run an entire EDM analysis based on data uploaded to a website &amp; without having to install any software at all!</p> <p>Work-in-progress</p> <p>This is currently in the proof-of-concept phase. Please let me know if you're into web tech and would like to help build out this demo!</p> <p>Choose a value of \\(E\\):</p>    E:  0 <p>The manifold created based on the toy dataset (the timeseries of increasing integers, starting at 11):  </p> <p>The summary of calling <code>edm</code> on this dataset:</p> <p></p> <p>Be patient</p> <p>When loading this page, pyscript takes ~5-10 seconds to load, so please be patient. </p>"}]}